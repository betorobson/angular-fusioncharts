{"version":3,"file":"fusioncharts.service.js","sourceRoot":"","sources":["../../src/angular-fusioncharts/src/fusioncharts.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;AAE3C;IAAA;KAIC;wFAHY,kBAAkB;4EAAlB,kBAAkB,WAAlB,kBAAkB;6BAH/B;CAMC,AAJD,IAIC;SAHY,kBAAkB;uFAAlB,kBAAkB;cAD9B,UAAU;;AAMX;IAkBE,6BAAY,QAA4B;QACtC,IAAI,MAAW,CAAC;QAChB,IAAI,mBAAmB,CAAC,WAAW,EAAE,EAAE,CAAC;YACtC,MAAM,GAAG,mBAAmB,CAAC,SAAS,EAAE,CAAC;QAC3C,CAAC;aAAM,CAAC;YACN,MAAM,GAAG;gBACP,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,OAAO,EAAE,QAAQ,CAAC,OAAO;aAC1B,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;IACxD,CAAC;IAvBM,6BAAS,GAAhB,UAAiB,MAAW;QAC1B,mBAAmB,CAAC,OAAO,GAAG,MAAM,CAAC;IACvC,CAAC;IAEM,6BAAS,GAAhB;QACE,OAAO,mBAAmB,CAAC,OAAO,CAAC;IACrC,CAAC;IAEM,+BAAW,GAAlB;QACE,OAAO,CAAC,CAAC,mBAAmB,CAAC,OAAO,CAAC;IACvC,CAAC;IAeD,iDAAmB,GAAnB,UAAoB,IAAS,EAAE,OAAc;QAC3C,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,cAAc,EAAE,CAAC;YAClD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACnC,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,EAAE,CAAC;QACrC,CAAC;QAED,IAAI,OAAO,EAAE,CAAC;YACZ,OAAO,CAAC,OAAO,CAAC,UAAC,mBAAwB;gBACvC,IACE,CAAC,mBAAmB,CAAC,OAAO,IAAI,mBAAmB,CAAC,OAAO,CAAC;oBAC5D,CAAC,mBAAmB,CAAC,IAAI,IAAI,mBAAmB,CAAC,IAAI,CAAC,EACtD,CAAC;oBACD,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;gBACnC,CAAC;qBAAM,CAAC;oBACN,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,mDAAqB,GAArB;QACE,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC,CAAC;IAED,8CAAgB,GAAhB;QACE,mBAAmB,CAAC,SAAS,EAAE,CAAC;QAChC,OAAO,mBAAmB,CAAC,SAAS,CAAC;IACvC,CAAC;IAzDM,2BAAO,GAAQ,IAAI,AAAZ,CAAa;IACpB,6BAAS,GAAQ,CAAC,AAAT,CAAU;0FAFf,mBAAmB;6EAAnB,mBAAmB,WAAnB,mBAAmB;8BAThC;CAoEC,AA5DD,IA4DC;SA3DY,mBAAmB;uFAAnB,mBAAmB;cAD/B,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class FusionChartsStatic {\n  core: any;\n  modules: Function[];\n}\n\n@Injectable()\nexport class FusionChartsService {\n  static _fcRoot: any = null;\n  static itemCount: any = 0;\n  _fusionchartsStatice: FusionChartsStatic;\n\n  static setFCRoot(fcRoot: any) {\n    FusionChartsService._fcRoot = fcRoot;\n  }\n\n  static getFCRoot(): any {\n    return FusionChartsService._fcRoot;\n  }\n\n  static isFCRootSet() {\n    return !!FusionChartsService._fcRoot;\n  }\n\n  constructor(FCStatic: FusionChartsStatic) {\n    let fcRoot: any;\n    if (FusionChartsService.isFCRootSet()) {\n      fcRoot = FusionChartsService.getFCRoot();\n    } else {\n      fcRoot = {\n        core: FCStatic.core,\n        modules: FCStatic.modules\n      };\n    }\n    this.resolveFusionCharts(fcRoot.core, fcRoot.modules);\n  }\n\n  resolveFusionCharts(core: any, modules: any[]) {\n    if (core && core.id && core.id === 'FusionCharts') {\n      this._fusionchartsStatice = core;\n    } else {\n      this._fusionchartsStatice = core();\n    }\n\n    if (modules) {\n      modules.forEach((FusionChartsModules: any) => {\n        if (\n          (FusionChartsModules.getName && FusionChartsModules.getType) ||\n          (FusionChartsModules.name && FusionChartsModules.type)\n        ) {\n          core.addDep(FusionChartsModules);\n        } else {\n          FusionChartsModules(core);\n        }\n      });\n    }\n  }\n\n  getFusionChartsStatic() {\n    return this._fusionchartsStatice;\n  }\n\n  getNextItemCount() {\n    FusionChartsService.itemCount++;\n    return FusionChartsService.itemCount;\n  }\n}\n"]}